document.addEventListener("DOMContentLoaded", () => {


  const logo = document.querySelector(".logo");
  if (logo && !logo.closest("a")) {
    const link = document.createElement("a");
    link.href = "/";
    link.appendChild(logo.cloneNode(true));
    logo.replaceWith(link);
  }

  // --- –ê–Ω–∏–º–∞—Ü–∏—è —Å–µ–∫—Ü–∏–π –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ ---
  const sections = document.querySelectorAll(".section");

  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add("visible");
      }
    });
  }, {
    threshold: 0.1
  });

  sections.forEach(section => {
    observer.observe(section);
  });

  // --- –ö–∞—Ä—É—Å–µ–ª—å —Å –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π ---
  const slides = document.querySelectorAll(".slide");
  const dots = document.querySelectorAll(".dot");
  let index = 0;
  let interval;

  function showSlide(n) {
    slides.forEach((slide, i) => {
      slide.classList.remove("active");
      dots[i].classList.remove("active");
    });
    slides[n].classList.add("active");
    dots[n].classList.add("active");
  }

  function nextSlide() {
    index = (index + 1) % slides.length;
    showSlide(index);
  }

  function startAutoSlide() {
    interval = setInterval(nextSlide, 7700);
  }

  function resetAutoSlide() {
    clearInterval(interval);
    startAutoSlide();
  }

  showSlide(index);
  startAutoSlide();

  document.querySelector(".next").addEventListener("click", () => {
    nextSlide();
    resetAutoSlide();
  });

  document.querySelector(".prev").addEventListener("click", () => {
    index = (index - 1 + slides.length) % slides.length;
    showSlide(index);
    resetAutoSlide();
  });

  dots.forEach((dot, i) => {
    dot.addEventListener("click", () => {
      index = i;
      showSlide(index);
      resetAutoSlide();
    });
  });

  // --- –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –±–µ–∑ # –≤ –∞–¥—Ä–µ—Å–µ ---
  document.querySelectorAll('a[href^="#"]').forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();

      const targetId = link.getAttribute('href').substring(1);
      const section = document.getElementById(targetId);

      if (section) {
        const targetOffset = section.offsetTop;
        const scrollSpeed = 700; // üí° –ù–∞—Å—Ç—Ä–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å –∑–¥–µ—Å—å (–≤ –º—Å)

        const start = window.scrollY;
        const startTime = performance.now();

        function animateScroll(currentTime) {
          const elapsed = currentTime - startTime;
          const progress = Math.min(elapsed / scrollSpeed, 1);
          const ease = 1 - Math.pow(1 - progress, 3); // easeOutCubic

          window.scrollTo(0, start + (targetOffset - start - 20) * ease);

          if (progress < 1) {
            requestAnimationFrame(animateScroll);
          }
        }

        requestAnimationFrame(animateScroll);
      }
    });
  });
});



// --- –ú–æ–±–∏–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ---
function isMobile() {
  return window.innerWidth <= 768;
}

// –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–µ–ª–∫–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö (–µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å–∫—Ä—ã—Ç—ã –≤ CSS)
if (isMobile()) {
  const prevBtn = document.querySelector(".prev");
  const nextBtn = document.querySelector(".next");
  if (prevBtn) prevBtn.style.display = "none";
  if (nextBtn) nextBtn.style.display = "none";
}

// –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–∞–π–ø-–∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
let touchStartX = 0;
let touchEndX = 0;

function handleGesture() {
  if (touchEndX < touchStartX - 50) {
    nextSlide();
    resetAutoSlide();
  }
  if (touchEndX > touchStartX + 50) {
    index = (index - 1 + slides.length) % slides.length;
    showSlide(index);
    resetAutoSlide();
  }
}

document.querySelector(".slides").addEventListener("touchstart", (e) => {
  touchStartX = e.changedTouches[0].screenX;
});

document.querySelector(".slides").addEventListener("touchend", (e) => {
  touchEndX = e.changedTouches[0].screenX;
  handleGesture();
});


/* === –°–≤–∞–π–ø—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö/—Ç–∞—á-—É—Å—Ç—Ä–æ–π—Å—Ç–≤ === */
(() => {
  const wrapper = document.querySelector(".slides");
  if (!wrapper) return;            // –∑–∞—â–∏—Ç–∞, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω

  let startX = 0;                  // —Ç–æ—á–∫–∞ –Ω–∞—á–∞–ª–∞ –∫–∞—Å–∞–Ω–∏—è
  let diffX  = 0;                  // —Å–º–µ—â–µ–Ω–∏–µ –ø–∞–ª—å—Ü–∞

  // 1. –ó–∞–ø–æ–º–∏–Ω–∞–µ–º, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–æ—Å–Ω—É–ª—Å—è —ç–∫—Ä–∞–Ω–∞
  wrapper.addEventListener("touchstart", (e) => {
    startX = e.touches[0].clientX;
  }, { passive: true });

  // 2. –°—á–∏—Ç–∞–µ–º —Å–º–µ—â–µ–Ω–∏–µ (–Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–µ ¬´—Ç—ã—á–∫–∏¬ª)
  wrapper.addEventListener("touchmove", (e) => {
    diffX = e.touches[0].clientX - startX;
  }, { passive: true });

  // 3. –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∫–∞—Å–∞–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∂–µ—Å—Ç
  wrapper.addEventListener("touchend", () => {
    const SWIPE_THRESHOLD = 50;    // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–≤–∞–π–ø–∞ (px)

    if (Math.abs(diffX) > SWIPE_THRESHOLD) {
      if (diffX < 0) {             // —Å–≤–∞–π–ø –≤–ª–µ–≤–æ  ‚Üí —Å–ª–µ–¥—É—é—â–∏–π —Å–ª–∞–π–¥
        nextSlide();
      } else {                     // —Å–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ ‚Üí –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª–∞–π–¥
        index = (index - 1 + slides.length) % slides.length;
        showSlide(index);
      }
      resetAutoSlide();            // –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ-–ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    }

    // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
    startX = diffX = 0;
  });
})();
